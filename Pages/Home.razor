@page "/"
@inject HttpClient Http
@using System.Text.Json.Serialization;

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>
@if (coinDataList != null) {
    foreach (var coinData in coinDataList)
    {
    <div>
        <img src="@coinData.Image" style="height: 20px; width: 20px; vertical-align: middle; margin-right: 5px;">
        <p><strong>ID:</strong> @coinData.Id</p>
        <p><strong>Symbol:</strong> @coinData.Symbol</p>
        <p><strong>Name:</strong> @coinData.Name</p>
        <p><strong>Current Price:</strong> €@coinData.CurrentPrice.ToString("N2")</p>
        <p><strong>Market Cap:</strong> €@coinData.MarketCap.ToString("N0")</p>
        <p><strong>Price Change 24h:</strong> €@coinData.PriceChange24H</p>
        <p><strong>Price Change %:</strong> @coinData.PriceChangePercentage24H%</p>
    </div>
    }
}
@code {
    private List<CoinData>? coinDataList;
    protected override async Task OnInitializedAsync()
    {
        await FetchCoinData();
    }
    private async Task FetchCoinData()
    {
        try
        {
            const string API_URL = "https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=100&page=1&sparkline=false&locale=en";
            var response = await Http.GetAsync(API_URL);
            if (response.IsSuccessStatusCode)
            {
                var json = await response.Content.ReadAsStringAsync();
                coinDataList = System.Text.Json.JsonSerializer.Deserialize<List<CoinData>>(json);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
    public class CoinData
    {
        [JsonPropertyName("id")]
        public string? Id { get; set; }

        [JsonPropertyName("symbol")]
        public string? Symbol { get; set; }

        [JsonPropertyName("name")]
        public string? Name { get; set; }

        [JsonPropertyName("image")]
        public string? Image { get; set; }

        [JsonPropertyName("current_price")]
        public decimal CurrentPrice { get; set; }

        [JsonPropertyName("price_change_24h")]
        public decimal PriceChange24H { get; set; }

        [JsonPropertyName("price_change_percentage_24h")]
        public decimal PriceChangePercentage24H { get; set; }

        [JsonPropertyName("market_cap")]
        public long MarketCap { get; set; }
    }
}